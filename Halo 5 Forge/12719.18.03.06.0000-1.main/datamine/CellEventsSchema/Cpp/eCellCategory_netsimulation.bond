

/// <auto-generated>
///	 This file was generated by a tool.
///
///	 Tool:	Cell Preprocessor, Version=3.0.0.0
///	 Format:	Concise.  Only contains fields referenced by client code.
///
///	 Changes to this file may cause incorrect behavior and will be lost when the code is regenerated.
/// </auto-generated>
import "bond\core\bond.bond"
import "MaelstromEvent.bond"
import "OsirisIncludes.bond"
import "GameEvents.bond"

namespace cpp i343.Telemetry
namespace csharp Microsoft.Halo.Telemetry.MaelstromEvent.eCellCategory_netsimulation

using Cell_DXGI_Adapter_Desc = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_DXGI_Adapter_Desc;
using Cell_ScreenResolution = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_ScreenResolution;
using Cell_System_Info = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_System_Info;
using CellEventFrequency = Microsoft.Halo.Telemetry.Corinth.Osiris.CellEventFrequency;
using CellMemoryCounter = Microsoft.Halo.Telemetry.Corinth.Osiris.CellMemoryCounter;
using CellMemoryDescriptor = Microsoft.Halo.Telemetry.Corinth.Osiris.CellMemoryDescriptor;
using EventsRange = Microsoft.Halo.Telemetry.Corinth.Osiris.EventsRange;
using GeoLocation = Microsoft.Halo.Telemetry.Corinth.Osiris.GeoLocation;
using PlayerState = Microsoft.Halo.Telemetry.Corinth.Osiris.PlayerState;
using PvEPlayerRoundStats = Microsoft.Halo.Telemetry.Corinth.Osiris.PvEPlayerRoundStats;
using ResourceIdentity = Microsoft.Halo.Telemetry.Corinth.Osiris.ResourceIdentity;
using TeamState = Microsoft.Halo.Telemetry.Corinth.Osiris.TeamState;
using Vector3D = Microsoft.Halo.Telemetry.Corinth.Osiris.Vector3D;
using WorldLocation = Microsoft.Halo.Telemetry.Corinth.Osiris.WorldLocation;


[EventName("ClientBulletMisprediction")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_weapons")]
[SubCategoryVal("15")]
[Description("")]
[FormatString("Client hit and server missed")]
[Version("1")]
[EventTypeID("0x0127006A")]
struct ClientBulletMisprediction: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint32 WeaponId;
};

[EventName("GameTimeDelay")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_world")]
[SubCategoryVal("16")]
[Description("")]
[FormatString("game time overage {0}s")]
[Version("1")]
[EventTypeID("0x01270075")]
struct GameTimeDelay: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: double OverageInSeconds;
};

[EventName("GameTimeStatistics")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_world")]
[SubCategoryVal("16")]
[Description("")]
[FormatString("number of late advances {0}, total game time overage {1}s")]
[Version("1")]
[EventTypeID("0x01270074")]
struct GameTimeStatistics: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint64 NumberOfLateAdvances;
	1: double TotalOverageInSeconds;
};

[EventName("ObjectsWarped")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("")]
[FormatString("Objects warped: {0} Vehicles, {1} Bipeds, {2} Players")]
[Version("1")]
[EventTypeID("0x01270069")]
struct ObjectsWarped: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint32 VehicleWarpCount;
	1: uint32 BipedWarpCount;
	2: uint32 PlayerWarpCount;
};

[EventName("ProjectileCreationDelay")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("")]
[FormatString("creation delay of {0}s for projectile of type {1}")]
[Version("1")]
[EventTypeID("0x01270072")]
struct ProjectileCreationDelay: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: float Delay;
	1: int32 Projectile;
};

[EventName("SimulationBlendAndNudgeAverages")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("provides delta averages for simulation position updates")]
[FormatString("blend position {0}, blend orientation {1}, nudge linear velocity {2}, nudge angular velocity {3}")]
[Version("1")]
[EventTypeID("0x0127006B")]
struct SimulationBlendAndNudgeAverages: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: float BlendPositionDeltaAverageLengthSquared;
	1: float BlendOrientationDeltaAverageLengthSquared;
	2: float NudgeLinearVelocityDeltaAverageLengthSquared;
	3: float NudgeAngularVelocityDeltaAverageLengthSquared;
};

[EventName("SimulationBlendOrientationDelta")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("")]
[FormatString("blend orientation delta of {0} exceeded threshold")]
[Version("1")]
[EventTypeID("0x0127006D")]
struct SimulationBlendOrientationDelta: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: float DeltaLengthSquared;
};

[EventName("SimulationBlendPositionDelta")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("")]
[FormatString("blend position delta of {0} exceeded threshold")]
[Version("1")]
[EventTypeID("0x0127006C")]
struct SimulationBlendPositionDelta: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: float DeltaLengthSquared;
};

[EventName("SimulationInventoryRoundsMispredict")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("")]
[FormatString("inventory rounds in {0} corrected from {1} to {2}")]
[Version("2")]
[EventTypeID("0x01270071")]
struct SimulationInventoryRoundsMispredict: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	2: uint32 WeaponId;
	0: int16 PredictedValue;
	1: int16 AuthorityValue;
};

[EventName("SimulationLoadedRoundsMispredict")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("")]
[FormatString("loaded rounds in {0} corrected from {1} to {2}")]
[Version("2")]
[EventTypeID("0x01270070")]
struct SimulationLoadedRoundsMispredict: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	2: uint32 WeaponId;
	0: int16 PredictedValue;
	1: int16 AuthorityValue;
};

[EventName("SimulationNudgeAngularVelocityDelta")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("")]
[FormatString("nudge angular velocity delta of {0} exceeded threshold")]
[Version("1")]
[EventTypeID("0x0127006F")]
struct SimulationNudgeAngularVelocityDelta: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: float DeltaLengthSquared;
};

[EventName("SimulationNudgeLinearVelocityDelta")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("")]
[FormatString("nudge linear velocity delta of {0} exceeded threshold")]
[Version("1")]
[EventTypeID("0x0127006E")]
struct SimulationNudgeLinearVelocityDelta: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: float DeltaLengthSquared;
};

[EventName("SimulationWeaponAgeMispredict")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("")]
[FormatString("weapon age of {0} corrected from {1} to {2}")]
[Version("1")]
[EventTypeID("0x01270076")]
struct SimulationWeaponAgeMispredict: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint32 WeaponId;
	1: float PredictedValue;
	2: float AuthorityValue;
};

[EventName("WeaponPickupDelay")]
[Category("eCellCategory_netsimulation")]
[CategoryVal("39")]
[SubCategory("eCellSubcategoryNetSimulation_objects")]
[SubCategoryVal("6")]
[Description("")]
[FormatString("pickup delay of {0}s for weapon of type {1}")]
[Version("1")]
[EventTypeID("0x01270073")]
struct WeaponPickupDelay: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: float Delay;
	1: int32 Projectile;
};


