

/// <auto-generated>
///	 This file was generated by a tool.
///
///	 Tool:	Cell Preprocessor, Version=3.0.0.0
///	 Format:	Concise.  Only contains fields referenced by client code.
///
///	 Changes to this file may cause incorrect behavior and will be lost when the code is regenerated.
/// </auto-generated>
import "bond\core\bond.bond"
import "MaelstromEvent.bond"
import "OsirisIncludes.bond"
import "GameEvents.bond"

namespace cpp i343.Telemetry
namespace csharp Microsoft.Halo.Telemetry.MaelstromEvent.eCellCategory_ui

using Cell_DXGI_Adapter_Desc = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_DXGI_Adapter_Desc;
using Cell_ScreenResolution = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_ScreenResolution;
using Cell_System_Info = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_System_Info;
using CellEventFrequency = Microsoft.Halo.Telemetry.Corinth.Osiris.CellEventFrequency;
using CellMemoryCounter = Microsoft.Halo.Telemetry.Corinth.Osiris.CellMemoryCounter;
using CellMemoryDescriptor = Microsoft.Halo.Telemetry.Corinth.Osiris.CellMemoryDescriptor;
using EventsRange = Microsoft.Halo.Telemetry.Corinth.Osiris.EventsRange;
using GeoLocation = Microsoft.Halo.Telemetry.Corinth.Osiris.GeoLocation;
using PlayerState = Microsoft.Halo.Telemetry.Corinth.Osiris.PlayerState;
using PvEPlayerRoundStats = Microsoft.Halo.Telemetry.Corinth.Osiris.PvEPlayerRoundStats;
using ResourceIdentity = Microsoft.Halo.Telemetry.Corinth.Osiris.ResourceIdentity;
using TeamState = Microsoft.Halo.Telemetry.Corinth.Osiris.TeamState;
using WorldLocation = Microsoft.Halo.Telemetry.Corinth.Osiris.WorldLocation;


[EventName("ERAMTooSmall")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description(".")]
[FormatString("Not enough ESRAM space for render target of size w[{0}] h[{1}]")]
[Version("1")]
[EventTypeID("0x010E000D")]
struct ERAMTooSmall: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: int64 Width;
	1: int64 Height;
};

[EventName("ESRAMTooSmallForSurface_UsingDRAM")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description(".")]
[FormatString("Surface wanted to be in ESRAM, but it didn't fit. Using DRAM instead.")]
[Version("1")]
[EventTypeID("0x010E0010")]
struct ESRAMTooSmallForSurface_UsingDRAM: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

};

[EventName("ESRAMToSmallForSurface")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description(".")]
[FormatString("Surface wanted to be in ESRAM, but it didn't fit.")]
[Version("1")]
[EventTypeID("0x010E000F")]
struct ESRAMToSmallForSurface: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

};

[EventName("ExitExperience_FailedCMSRetrieval")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description("")]
[FormatString("Failed to retrieve data from CMS")]
[Version("1")]
[EventTypeID("0x010E0014")]
struct ExitExperience_FailedCMSRetrieval: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

};

[EventName("FailedAllocatingFont")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_wpf")]
[SubCategoryVal("1")]
[Description(".")]
[FormatString("FT_New_Memory_Face failed with error code {0}")]
[Version("1")]
[EventTypeID("0x010E0012")]
struct FailedAllocatingFont: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: int32 ReturnCode;
};

[EventName("FontCacheTooSmall")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description(".")]
[FormatString("Failed to allocate all glyphs, increase the font cache size!")]
[Version("1")]
[EventTypeID("0x010E000C")]
struct FontCacheTooSmall: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

};

[EventName("FontMatched")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_wpf")]
[SubCategoryVal("1")]
[Description(".")]
[FormatString("Matched font, requested '{0}', mapped to '{1}' recieved '{2}'")]
[Version("1")]
[EventTypeID("0x010E0001")]
struct FontMatched: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: string RequestedFont;
	1: string MappedFont;
	2: string MatchedFont;
};

[EventName("ImageSourceTextureNotInScenario")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_wpf")]
[SubCategoryVal("1")]
[Description(".")]
[FormatString("ImageSource {0} not found in map transition!  Texture should be added to scenario")]
[Version("1")]
[EventTypeID("0x010E0005")]
struct ImageSourceTextureNotInScenario: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring SourceName;
};

[EventName("InvalidScreenDefinitionTag")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description(".")]
[FormatString("WPFScreenDefinition tag invalid {0}")]
[Version("1")]
[EventTypeID("0x010E0008")]
struct InvalidScreenDefinitionTag: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring URI;
};

[EventName("LoadingXAML")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description(".")]
[FormatString("Attempting to load xaml file {0}")]
[Version("1")]
[EventTypeID("0x010E000A")]
struct LoadingXAML: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring URI;
};

[EventName("LoadingXAMLFailure")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description(".")]
[FormatString("Failed to load xaml file resource {0}")]
[Version("1")]
[EventTypeID("0x010E000B")]
struct LoadingXAMLFailure: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring URI;
};

[EventName("RecalculateGradientImageWastingD3DCycles")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_wpf")]
[SubCategoryVal("1")]
[Description(".")]
[FormatString("ClientGradientBrush::RecalculateGradientImage is doing non optimal work deleting and recreating D3D resource!")]
[Version("1")]
[EventTypeID("0x010E0006")]
struct RecalculateGradientImageWastingD3DCycles: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

};

[EventName("TagBitmapSourceData_UriParseFailureOnCreate")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_wpf")]
[SubCategoryVal("1")]
[Description(".")]
[FormatString("TagBitmapSourceData::Create Failed to parse web uri {0}")]
[Version("1")]
[EventTypeID("0x010E0002")]
struct TagBitmapSourceData_UriParseFailureOnCreate: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring URI;
};

[EventName("TagResourceLoadFailure")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description(".")]
[FormatString("Failed to load tag resource {0}")]
[Version("1")]
[EventTypeID("0x010E0009")]
struct TagResourceLoadFailure: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring URI;
};

[EventName("TextureLoadSourceFailure")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_wpf")]
[SubCategoryVal("1")]
[Description(".")]
[FormatString("TextureManager::LoadSource Failed to load texture {0}")]
[Version("1")]
[EventTypeID("0x010E0003")]
struct TextureLoadSourceFailure: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring URI;
};

[EventName("UIRenderTargetImproperlyAllocated")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description(".")]
[FormatString("UIESRamRenderTargetManager::AllocateESRAMBuffers UIRenderTarget was not allocated properly.")]
[Version("1")]
[EventTypeID("0x010E000E")]
struct UIRenderTargetImproperlyAllocated: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

};

[EventName("WebBitmapSourceData_BadURI")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_none")]
[SubCategoryVal("0")]
[Description(".")]
[FormatString("WebBitmapSourceData::Create Failed to parse web uri {0}")]
[Version("1")]
[EventTypeID("0x010E0011")]
struct WebBitmapSourceData_BadURI: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring URI;
};

[EventName("WPFHandleInput")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_wpf")]
[SubCategoryVal("1")]
[Description("WPFScreen::HandleInput")]
[FormatString("")]
[Version("1")]
[EventTypeID("0x010E0018")]
struct WPFHandleInput: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring HaloWindowTitle;
	1: int32 KeyboardEvent;
};

[EventName("WPFLoadXaml")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_wpf")]
[SubCategoryVal("1")]
[Description("WPFScreen::LoadXaml")]
[FormatString("")]
[Version("1")]
[EventTypeID("0x010E0016")]
struct WPFLoadXaml: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring HaloWindowTitle;
};

[EventName("WPFOnExit")]
[Category("eCellCategory_ui")]
[CategoryVal("14")]
[SubCategory("eCellSubcategoryUi_wpf")]
[SubCategoryVal("1")]
[Description("WPFScreen::WPFOnExit")]
[FormatString("")]
[Version("1")]
[EventTypeID("0x010E0017")]
struct WPFOnExit: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: wstring HaloWindowTitle;
};


