

/// <auto-generated>
///	 This file was generated by a tool.
///
///	 Tool:	Cell Preprocessor, Version=3.0.0.0
///	 Format:	Concise.  Only contains fields referenced by client code.
///
///	 Changes to this file may cause incorrect behavior and will be lost when the code is regenerated.
/// </auto-generated>
import "bond\core\bond.bond"
import "MaelstromEvent.bond"
import "OsirisIncludes.bond"
import "GameEvents.bond"

namespace cpp i343.Telemetry
namespace csharp Microsoft.Halo.Telemetry.MaelstromEvent.eCellCategory_legacyLog

using Cell_DXGI_Adapter_Desc = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_DXGI_Adapter_Desc;
using Cell_ScreenResolution = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_ScreenResolution;
using Cell_System_Info = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_System_Info;
using CellEventFrequency = Microsoft.Halo.Telemetry.Corinth.Osiris.CellEventFrequency;
using CellMemoryCounter = Microsoft.Halo.Telemetry.Corinth.Osiris.CellMemoryCounter;
using CellMemoryDescriptor = Microsoft.Halo.Telemetry.Corinth.Osiris.CellMemoryDescriptor;
using EventsRange = Microsoft.Halo.Telemetry.Corinth.Osiris.EventsRange;
using GeoLocation = Microsoft.Halo.Telemetry.Corinth.Osiris.GeoLocation;
using PlayerState = Microsoft.Halo.Telemetry.Corinth.Osiris.PlayerState;
using PvEPlayerRoundStats = Microsoft.Halo.Telemetry.Corinth.Osiris.PvEPlayerRoundStats;
using ResourceIdentity = Microsoft.Halo.Telemetry.Corinth.Osiris.ResourceIdentity;
using TeamState = Microsoft.Halo.Telemetry.Corinth.Osiris.TeamState;
using WorldLocation = Microsoft.Halo.Telemetry.Corinth.Osiris.WorldLocation;


[EventName("LogEvent")]
[Category("eCellCategory_legacyLog")]
[CategoryVal("11")]
[SubCategory("eCellSubcategoryLegacyLog_none")]
[SubCategoryVal("0")]
[Description("Legacy DatamineLogging event shim.")]
[FormatString("{0}")]
[Version("2")]
[EventTypeID("0x010B0001")]
struct LogEvent: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: string String;
	1: uint64 Hash;
	2: int16 Category;
	3: string Filename;
	4: int32 LineNumber;
};


