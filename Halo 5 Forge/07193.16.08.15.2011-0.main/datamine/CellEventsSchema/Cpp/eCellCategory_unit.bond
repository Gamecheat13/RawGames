

/// <auto-generated>
///	 This file was generated by a tool.
///
///	 Tool:	Cell Preprocessor, Version=3.0.0.0
///	 Format:	Concise.  Only contains fields referenced by client code.
///
///	 Changes to this file may cause incorrect behavior and will be lost when the code is regenerated.
/// </auto-generated>
import "bond\core\bond.bond"
import "MaelstromEvent.bond"
import "OsirisIncludes.bond"
import "GameEvents.bond"

namespace cpp i343.Telemetry
namespace csharp Microsoft.Halo.Telemetry.MaelstromEvent.eCellCategory_unit

using Cell_DXGI_Adapter_Desc = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_DXGI_Adapter_Desc;
using Cell_ScreenResolution = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_ScreenResolution;
using Cell_System_Info = Microsoft.Halo.Telemetry.Corinth.Osiris.Cell_System_Info;
using CellEventFrequency = Microsoft.Halo.Telemetry.Corinth.Osiris.CellEventFrequency;
using EventsRange = Microsoft.Halo.Telemetry.Corinth.Osiris.EventsRange;
using GeoLocation = Microsoft.Halo.Telemetry.Corinth.Osiris.GeoLocation;
using PlayerState = Microsoft.Halo.Telemetry.Corinth.Osiris.PlayerState;
using PvEPlayerRoundStats = Microsoft.Halo.Telemetry.Corinth.Osiris.PvEPlayerRoundStats;
using ResourceIdentity = Microsoft.Halo.Telemetry.Corinth.Osiris.ResourceIdentity;
using TeamState = Microsoft.Halo.Telemetry.Corinth.Osiris.TeamState;
using WorldLocation = Microsoft.Halo.Telemetry.Corinth.Osiris.WorldLocation;


[EventName("UnitReviveExited")]
[Category("eCellCategory_unit")]
[CategoryVal("9")]
[SubCategory("eCellSubcategoryunit_revive")]
[SubCategoryVal("1")]
[Description("Unit revived successfully")]
[FormatString("")]
[Version("3")]
[EventTypeID("0x01090002")]
struct UnitReviveExited: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint64 reviverXuid;
	1: uint16 reviverAiUnitType;
	2: float reviverX;
	3: float reviverY;
	4: float reviverZ;
	5: bool reviverIsControlledByAI;
	6: uint64 reviveeXuid;
	7: uint16 reviveeAiUnitType;
	8: float reviveeX;
	9: float reviveeY;
	10: float reviveeZ;
	11: bool reviveeIsControlledByAI;
	12: float gameTime;
	13: uint8 reviverAvatarId;
	14: uint8 reviveeAvatarId;
	15: bool isSuccessfulRevive;
};

[EventName("UnitReviveInitiate")]
[Category("eCellCategory_unit")]
[CategoryVal("9")]
[SubCategory("eCellSubcategoryunit_revive")]
[SubCategoryVal("1")]
[Description("Unit revive initiated")]
[FormatString("")]
[Version("2")]
[EventTypeID("0x01090001")]
struct UnitReviveInitiate: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint64 reviverXuid;
	1: uint16 reviverAiUnitType;
	2: float reviverX;
	3: float reviverY;
	4: float reviverZ;
	5: bool reviverIsControlledByAI;
	6: uint64 reviveeXuid;
	7: uint16 reviveeAiUnitType;
	8: float reviveeX;
	9: float reviveeY;
	10: float reviveeZ;
	11: bool reviveeIsControlledByAI;
	12: float gameTime;
	13: uint8 reviverAvatarId;
	14: uint8 reviveeAvatarId;
};

[EventName("VehicleSeatEntered")]
[Category("eCellCategory_unit")]
[CategoryVal("9")]
[SubCategory("eCellSubcategoryunit_none")]
[SubCategoryVal("0")]
[Description("Vehicle seat entered")]
[FormatString("")]
[Version("9")]
[EventTypeID("0x01090003")]
struct VehicleSeatEntered: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint64 playerXuid;
	6: uint32 rootMountId;
	4: uint32 mountId;
	2: uint64 seatIndex;
	9: uint32 rootStockId;
	8: uint32 stockId;
	11: vector<uint32> attachmentIds;
};

[EventName("VehicleSeatExited")]
[Category("eCellCategory_unit")]
[CategoryVal("9")]
[SubCategory("eCellSubcategoryunit_none")]
[SubCategoryVal("0")]
[Description("Vehicle seat exited")]
[FormatString("")]
[Version("10")]
[EventTypeID("0x01090004")]
struct VehicleSeatExited: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint64 playerXuid;
	6: uint32 rootMountId;
	4: uint32 mountId;
	2: uint64 seatIndex;
	9: uint32 rootStockId;
	8: uint32 stockId;
	11: vector<uint32> attachmentIds;
};


