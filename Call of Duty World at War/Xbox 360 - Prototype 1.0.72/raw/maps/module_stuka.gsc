/***********************************************************************************
Module: stuka (module_stuka.map & module_stuka.gsc)
Last modified by SRS 05/03/07

Demonstrates:

	- How to set up a stuka and get it flying around.
	- How to disable the AI turrets on the stuka.
	- How to give the stuka bombs and make it drop them at a certain time.
	- How to grab the stuka when the "vehiclespawngroup" is created.
	- How to detect when the plane hits a particular node on the spline, to enable custom behavior
	- How to delete the plane once it's finished on the spline.
		
Steps:
	- put a stuka in the map as a script_vehicle.  make sure to give it a vehicletype of "stuka".
	
	- create a spline path with info_vehicle_node_rotate nodes.
	
	- To see the vehicle spline in Radiant, you need to have the first node set up like this:
		* make sure "START_NODE" is checked.
		* key-value pair (KVP) for "speed" (the vehicle speed)
		* KVP for "lookahead" (controls smoothness of the spline)
		* KVP for "targetname" with a CUSTOM TARGETNAME.  Autogenerated targetnames don't work.
		
	- target the starting spline on your path from the stuka.
	
	- create a trigger_multiple that will trigger the spawning of the vehicle.
		
	- select both the vehicle and the trigger, and use shift+V to pull up the
	  vehicle setup menu in CODRadiant. Click the "Spawn Vehicle" and "Move Vehicle" buttons.
	
	- If both the plane and trigger have both the "script_vehiclespawngroup" and "script_vehiclestartmove"
	   keys with matching values, you should be all set!
	   
	- If you don't want the plane's turrets to fire at enemies automatically
	  set "script_turretmg" to 0 on the plane spawner in the map.
	
	- If you want the plane to be deleted when it hits the end of its spline,
	  set "script_vehicle_selfremove" to 1 on the plane spawner in the map.
	  (The example in the module does this, which is why it disappears when it's done with the path.)
	
To add/drop bombs:
	- In your map, set "script_numbombs" on your plane to however many bombs you want to give your plane.
	
	- On its path, select a vehiclenode where you want it to drop some bombs,
	  and set "script_dropbombs" to the number of bombs you want the plane to
	  drop at that spot on its spline.
		
	- On a vehiclenode you set up with "script_dropbombs", you can change the delay
	  between bombs using "script_dropbombs_delay".
		
	- On a vehiclenode you set up with "script_dropbombs", you can set a delay
	  before each dropped bomb starts tracing to find a collidable surface
	  to explode against by using "script_dropbombs_delaytrace".
	   
Notes:
	- Step on the trigger in the module_stuka map to spawn the plane and make it fly.  Whee!
	- Some of the scripting is commented out here because it's duplicated with in-map settings
	  (like the bomb stuff).  Feel free to try both methods on your own, just remember to revert the script
	  and map when you're done!

TODO:
	- Add examples of attaching particles to the plane, when we get WW2 particles again.

************************************************************************************/

#include maps\_utility;
main()
{
	// Required to set up the vehicles through the vehicle script
	maps\_stuka::main();

	// This needs to come AFTER the vehicle loading script(s)
	maps\_load::main();

	// here's where we'll demo the stuff you can do with a plane.
	thread plane_custom_think();
}

plane_custom_think()
{
	// Grab the vehicle once our spawngroup is triggered.
	//
	// This notify comes from the vehicle scripts. You can wait for "spawnvehiclegroupX" where
	//  X is the number set on the script_vehiclespawngroup property on the trigger / vehicle.
	level waittill ( "spawnvehiclegroup0" );
	
	// If you don't put a wait here it won't find the vehicle on a GetEnt.
	wait( 0.1 );
	thePlane = GetEnt( "my_stuka", "targetname" );
	
	// Here's how you could manually give the plane some bombs.
	// - can also use "script_numbombs" on the vehicle spawner in the map
	//thePlane maps\_planeweapons::bomb_init( 2 );
	
	// figure out when the plane hits a certain node on its path.
	thePlane thread vehicle_at_node();
}

// self = the vehicle
vehicle_at_node()
{
	// get a certain vehiclenode on the plane's path: note that we use GetVehicleNode (not GetNode or GetEnt)
	myNode = GetVehicleNode( "vnode_stuka_curve", "targetname" );
	
	// wait for the node to tell us it's been hit by the vehicle.  This is fancy new cod4 and up behavior.
	myNode waittill( "trigger" );
	
	println( "vehicle hit the special vehiclenode!" );
	
	// Here's how you can manually tell the plane to drop the bombs you set up earlier with bomb_init().
	// - this notify is caught by _stuka::drop_bomber(), and can be modified
	//   to change the number that are dropped, timing between them, etc.
	// - AND/OR can be triggered automatically from a vehiclenode with "script_dropbombs" set to
	//   the # of bombs you want the plane to drop.
	//self notify( "drop_bombs", undefined, 1, 0.5 );
}
