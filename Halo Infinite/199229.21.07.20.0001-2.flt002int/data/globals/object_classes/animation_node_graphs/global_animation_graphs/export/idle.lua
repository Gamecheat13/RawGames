-- Copyright (c) Microsoft. All rights reserved.

-- THIS CODE IS GENERATED BY THE VISUAL ANIMATION GRAPH EDITOR -- 

-- GENERATED LUA DECLARATIONS --



-- GENERATED LUA CODE --

function idle()

	local ReturnPose_FFGACDGCGCAJEHHH:table = nil;
	local Animation_CCFGICGCGCAJEHH:table = AnimGraph.CreateAnimation("idle", true, 1.000000, 1.000000);

	
	

	return Animation_CCFGICGCGCAJEHH;
end

function stationary_turn_right()

	local ReturnPose_CDGAIDGCGCAJEHHH:table = nil;
	local BlendSpace1D_CDEJCDGCGCAJEHHH:table, turn_right = AnimGraph.DuplicateReturnNodeForVisualScripting(AnimGraph.CreateBlendSpace1D(-60.000000, -360.000000));
	local animsFor_turn_right = {};
	for key, entry in ipairs(turn_right_blendspace()) do
		local animationName = entry.animationName;
		animsFor_turn_right[animationName..entry.playbackRate] = AnimGraph.CreateAnimationWithGroupName(AnimGraph_VisualScripting["combat:rifle_Context"]..animationName, entry.looping, entry.mode, entry.groupName, entry.playbackRate);
		AnimGraph.AddBlendSpaceInputPose1D(turn_right, entry.A, animsFor_turn_right[animationName..entry.playbackRate].Out);
		if entry.mode ~= 1 then
			if type(entry.position) == 'number' then
				local position = AnimGraph.HelperInputFloat(entry.position)
				NG.CreateLink(position.Out, animsFor_turn_right[animationName..entry.playbackRate].Position)
			else
				local funct = AnimGraph.HelperInputVariableNode(entry.position)
				NG.CreateLink(funct.Out, animsFor_turn_right[animationName..entry.playbackRate].Position)
			end
		end
	end

	local FunctionNode_GBBBJDGCGCAJEHHH:table = control_stationary_turn_rate()

	
	NG.CreateLink(FunctionNode_GBBBJDGCGCAJEHHH.Out, BlendSpace1D_CDEJCDGCGCAJEHHH.Alpha);
	AnimGraph.Set1DBlendSpacePhaseMatchedAnimationGroup(turn_right, AnimGraph_VisualScripting["groupNames"].turn_right)
	

	return BlendSpace1D_CDEJCDGCGCAJEHHH;
end

function stationary_turn_left()

	local ReturnPose_GJJFIDGCGCAJEHHH:table = nil;
	local BlendSpace1D_AHEHFDGCGCAJEHHH:table, turn_left = AnimGraph.DuplicateReturnNodeForVisualScripting(AnimGraph.CreateBlendSpace1D(0.000000, 360.000000));
	local animsFor_turn_left = {};
	for key, entry in ipairs(turn_left_blendspace()) do
		local animationName = entry.animationName;
		animsFor_turn_left[animationName..entry.playbackRate] = AnimGraph.CreateAnimationWithGroupName(AnimGraph_VisualScripting["combat:rifle_Context"]..animationName, entry.looping, entry.mode, entry.groupName, entry.playbackRate);
		AnimGraph.AddBlendSpaceInputPose1D(turn_left, entry.A, animsFor_turn_left[animationName..entry.playbackRate].Out);
		if entry.mode ~= 1 then
			if type(entry.position) == 'number' then
				local position = AnimGraph.HelperInputFloat(entry.position)
				NG.CreateLink(position.Out, animsFor_turn_left[animationName..entry.playbackRate].Position)
			else
				local funct = AnimGraph.HelperInputVariableNode(entry.position)
				NG.CreateLink(funct.Out, animsFor_turn_left[animationName..entry.playbackRate].Position)
			end
		end
	end

	local FunctionNode_GBBBJDGCGCAJEHHH:table = control_stationary_turn_rate()

	
	NG.CreateLink(FunctionNode_GBBBJDGCGCAJEHHH.Out, BlendSpace1D_AHEHFDGCGCAJEHHH.Alpha);
	AnimGraph.Set1DBlendSpacePhaseMatchedAnimationGroup(turn_left, AnimGraph_VisualScripting["groupNames"].turn_left)
	

	return BlendSpace1D_AHEHFDGCGCAJEHHH;
end

 
