-- Copyright (c) Microsoft. All rights reserved.

-- THIS CODE IS GENERATED BY THE VISUAL ANIMATION GRAPH EDITOR -- 

-- GENERATED LUA DECLARATIONS --



-- GENERATED LUA CODE --
function dive()

	local ReturnPose_EAHIIAJIIJHDFGDD:table = nil;
	local Selection_AFBBHAJIIJHDFGD:table = AnimGraph.CreateSelection(true, 0.000000);
	local intparameter_ADGJBCJIIJHDFGDD:table = AnimGraph.CreateIntControlParameter("dive_direction");
	local Float_EIJHFAJIIJHDFGD:table = AnimGraph.CreateConstantFloat(0.000000);
	local AnimationWithGroupName_BEEIDBJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("dive_front", false, 1.000000, 1.000000);
	local AnimationWithGroupName_CHIAGBJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("dive_left", false, 1.000000, 1.000000);
	local AnimationWithGroupName_EGIAIBJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("dive_right", false, 1.000000, 1.000000);
	local AnimationWithGroupName_HFIAACJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("dive_back", false, 1.000000, 1.000000);

	
	NG.CreateLink(intparameter_ADGJBCJIIJHDFGDD.Out, Selection_AFBBHAJIIJHDFGD.Selected);
	NG.CreateLink(Float_EIJHFAJIIJHDFGD.Out, Selection_AFBBHAJIIJHDFGD.TransitionTime);
	NG.CreateLink(AnimationWithGroupName_BEEIDBJIIJHDFGDFGD.Out, Selection_AFBBHAJIIJHDFGD.Pose);
	NG.CreateLink(AnimationWithGroupName_CHIAGBJIIJHDFGDFGD.Out, Selection_AFBBHAJIIJHDFGD.Pose);
	NG.CreateLink(AnimationWithGroupName_EGIAIBJIIJHDFGDFGD.Out, Selection_AFBBHAJIIJHDFGD.Pose);
	NG.CreateLink(AnimationWithGroupName_HFIAACJIIJHDFGDFGD.Out, Selection_AFBBHAJIIJHDFGD.Pose);
	
	AnimGraph.ToggleRootMotionOn(AnimationWithGroupName_BEEIDBJIIJHDFGDFGD)
	AnimGraph.ToggleRootMotionOn(AnimationWithGroupName_CHIAGBJIIJHDFGDFGD)
	AnimGraph.ToggleRootMotionOn(AnimationWithGroupName_EGIAIBJIIJHDFGDFGD)
	AnimGraph.ToggleRootMotionOn(AnimationWithGroupName_HFIAACJIIJHDFGDFGD)

	return Selection_AFBBHAJIIJHDFGD;
end

function airborne_dead()

	local ReturnPose_ADIAHCJIIJHDFGDD:table = nil;
	local AnimationWithGroupName_BADCFCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("airborne_dead", true, 1.000000, 1.000000);

	
	

	return AnimationWithGroupName_BADCFCJIIJHDFGDFGD;
end

function landing_dead()

	local ReturnPose_AIEEJCJIIJHDFGDD:table = nil;
	local AnimationWithGroupName_JGBHHCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("landing_dead", false, 1.000000, 1.000000);

	
	AnimGraph.ToggleRootMotionOn(AnimationWithGroupName_JGBHHCJIIJHDFGDFGD)

	return AnimationWithGroupName_JGBHHCJIIJHDFGDFGD;
end

function evade()

	local ReturnPose_GDIJBDJIIJHDFGDD:table = nil;
	local Selection_HIAAADJIIJHDFGD:table = AnimGraph.CreateSelection(true, 0.000000);
	local intparameter_GBHEBDJIIJHDFGDD:table = AnimGraph.CreateIntControlParameter("evade_direction");
	local Float_EDCDGDJIIJHDFGD:table = AnimGraph.CreateConstantFloat(0.000000);
	local AnimationWithGroupName_HGBGEDJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("evade_left", false, 1.000000, 1.000000);
	local AnimationWithGroupName_JBEGCDJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("evade_right", false, 1.000000, 1.000000);

	
	NG.CreateLink(intparameter_GBHEBDJIIJHDFGDD.Out, Selection_HIAAADJIIJHDFGD.Selected);
	NG.CreateLink(Float_EDCDGDJIIJHDFGD.Out, Selection_HIAAADJIIJHDFGD.TransitionTime);
	NG.CreateLink(AnimationWithGroupName_HGBGEDJIIJHDFGDFGD.Out, Selection_HIAAADJIIJHDFGD.Pose);
	NG.CreateLink(AnimationWithGroupName_JBEGCDJIIJHDFGDFGD.Out, Selection_HIAAADJIIJHDFGD.Pose);
	
	AnimGraph.ToggleRootMotionOn(AnimationWithGroupName_HGBGEDJIIJHDFGDFGD)
	AnimGraph.ToggleRootMotionOn(AnimationWithGroupName_JBEGCDJIIJHDFGDFGD)

	return Selection_HIAAADJIIJHDFGD;
end

function ping()
	local anims = {}

	--create the selection node
	local selection = AnimGraph.CreateSelection(true, 0)

	--create the damage region selector
	local control_damage_region = control_ping_body_part()

	--create the flaot
	local transition_time = AnimGraph.CreateConstantFloat(0)

	--create the animations
	anims['hping_gut'] = AnimGraph.CreateAnimationWithGroupName("gut", false, 1, "fullbody_ping", 1.0);
	anims['hping_chest'] = AnimGraph.CreateAnimationWithGroupName("chest", false, 1, "fullbody_ping", 1.0);
	anims['hping_head'] = AnimGraph.CreateAnimationWithGroupName("head", false, 1, "fullbody_ping", 1.0);
	anims['hping_left_shoulder'] = AnimGraph.CreateAnimationWithGroupName("left_shoulder", false, 1, "fullbody_ping", 1.0);
	anims['hping_left_arm'] = AnimGraph.CreateAnimationWithGroupName("left_arm", false, 1, "fullbody_ping", 1.0);
	anims['hping_left_leg'] = AnimGraph.CreateAnimationWithGroupName("left_leg", false, 1, "fullbody_ping", 1.0);
	anims['hping_left_foot'] = AnimGraph.CreateAnimationWithGroupName("left_foot", false, 1, "fullbody_ping", 1.0);
	anims['hping_right_shoulder'] = AnimGraph.CreateAnimationWithGroupName("right_shoulder", false, 1, "fullbody_ping", 1.0);
	anims['hping_right_arm'] = AnimGraph.CreateAnimationWithGroupName("right_arm", false, 1, "fullbody_ping", 1.0);
	anims['hping_right_leg'] = AnimGraph.CreateAnimationWithGroupName("right_leg", false, 1, "fullbody_ping", 1.0);
	anims['hping_right_foot'] = AnimGraph.CreateAnimationWithGroupName("right_foot", false, 1, "fullbody_ping", 1.0);

	AnimGraph.ToggleRootMotionOn(anims['hping_gut']);
	AnimGraph.ToggleRootMotionOn(anims['hping_chest']);
	AnimGraph.ToggleRootMotionOn(anims['hping_head']);
	AnimGraph.ToggleRootMotionOn(anims['hping_left_shoulder']);
	AnimGraph.ToggleRootMotionOn(anims['hping_left_arm']);
	AnimGraph.ToggleRootMotionOn(anims['hping_left_leg']);
	AnimGraph.ToggleRootMotionOn(anims['hping_left_foot']);
	AnimGraph.ToggleRootMotionOn(anims['hping_right_shoulder']);
	AnimGraph.ToggleRootMotionOn(anims['hping_right_arm']);
	AnimGraph.ToggleRootMotionOn(anims['hping_right_leg']);
	AnimGraph.ToggleRootMotionOn(anims['hping_right_foot']);

	--connect the animations to the selection node
	NG.CreateLink(anims['hping_gut'].Out, selection.Pose)
	NG.CreateLink(anims['hping_chest'].Out, selection.Pose)
	NG.CreateLink(anims['hping_head'].Out, selection.Pose)
	NG.CreateLink(anims['hping_left_shoulder'].Out, selection.Pose)
	NG.CreateLink(anims['hping_left_arm'].Out, selection.Pose)
	NG.CreateLink(anims['hping_left_leg'].Out, selection.Pose)
	NG.CreateLink(anims['hping_left_foot'].Out, selection.Pose)
	NG.CreateLink(anims['hping_right_shoulder'].Out, selection.Pose)
	NG.CreateLink(anims['hping_right_arm'].Out, selection.Pose)
	NG.CreateLink(anims['hping_right_leg'].Out, selection.Pose)
	NG.CreateLink(anims['hping_right_foot'].Out, selection.Pose)

	--connect the damage int to the selection node selection input
	NG.CreateLink(control_damage_region.Out, selection.Selected)

	--connect the float to the selection node transition time
	NG.CreateLink(transition_time.Out, selection.TransitionTime)

	return selection
end

function sping()
	local anims = {}

	local spingBlendSpace = AnimGraph.CreateBlendSpace1D(-180.0, 180.0);

	local control_sping_yaw_node = control_sping_yaw();
	-- local control_sping_pitch_node = control_sping_pitch();

	--create the animations
	anims['s_ping_front'] = AnimGraph.CreateAnimationWithGroupName("s_ping_front", false, 2, "s_ping", 1.0);
	anims['s_ping_left'] = AnimGraph.CreateAnimationWithGroupName("s_ping_left", false, 2, "s_ping", 1.0);
	anims['s_ping_back'] = AnimGraph.CreateAnimationWithGroupName("s_ping_back", false, 2, "s_ping", 1.0);
	anims['s_ping_right'] = AnimGraph.CreateAnimationWithGroupName("s_ping_right", false, 2, "s_ping", 1.0);

	--connect the animations to the bs node
	AnimGraph.AddBlendSpaceInputPose1D(spingBlendSpace, 90.0, anims['s_ping_left'].Out)
	AnimGraph.AddBlendSpaceInputPose1D(spingBlendSpace, 180.0, anims['s_ping_back'].Out)
	AnimGraph.AddBlendSpaceInputPose1D(spingBlendSpace, -180, anims['s_ping_back'].Out)
	AnimGraph.AddBlendSpaceInputPose1D(spingBlendSpace, -90.0, anims['s_ping_right'].Out)
	AnimGraph.AddBlendSpaceInputPose1D(spingBlendSpace, 0.0, anims['s_ping_front'].Out)

	NG.CreateLink(control_sping_yaw_node.Out, spingBlendSpace.Alpha)

	return spingBlendSpace
end

function anim_graph_custom_animation()
	local customAnimation:table = AnimGraph.CreateAnimationWithGroupName("custom_animation", false, 1.000000, "custom_animation", 1.000000);
	AnimGraph.ToggleRootMotionOn(customAnimation)

	local customAnimationNameCP:table = AnimGraph.CreateStringControlParameter("custom_animation_token");

	NG.CreateLink(customAnimationNameCP.Out, customAnimation.AnimationTokenName)

	return customAnimation;
end

function hard_stop_animation()

	local animation_humbabedfda:table = AnimGraph.CreateAnimationWithGroupName("hard_stop", false, 1.000000, "hard_stop", 1.000000);
	
	AnimGraph.ToggleRootMotionOn(animation_humbabedfda)

	return animation_humbabedfda;
end

function hunker_enter()

	local ReturnPose_ADIAHCJIIJHDFGDD:table = nil;
	local AnimationWithGroupName_BADCFCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("hunker_enter", false, 1.000000, 1.000000);
	AnimGraph.ToggleRootMotionOn(AnimationWithGroupName_BADCFCJIIJHDFGDFGD)
	return AnimationWithGroupName_BADCFCJIIJHDFGDFGD;
end

function hunker_exit()
	local ReturnPose_ADIAHCJIIJHDFGDD:table = nil;
	local AnimationWithGroupName_BADCFCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("hunker_exit", false, 1.000000, 1.000000);
	AnimGraph.ToggleRootMotionOn(AnimationWithGroupName_BADCFCJIIJHDFGDFGD)
	return AnimationWithGroupName_BADCFCJIIJHDFGDFGD;
end

function hunker_loop()

	local ReturnPose_ADIAHCJIIJHDFGDD:table = nil;
	local AnimationWithGroupName_BADCFCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("hunker_loop", true, 1.000000, 1.000000);

	return AnimationWithGroupName_BADCFCJIIJHDFGDFGD;
end

function prefire_enter()
	local prefire_enter = AnimGraph.CreateAnimation("prefire_enter", false, 1.000000, 1.000000);

	return prefire_enter;
end

function prefire_loop()
	local prefire_loop = AnimGraph.CreateAnimation("prefire_loop", true, 1.000000, 1.000000);

	return prefire_loop;
end

function prefire_exit()
	local prefire_exit = AnimGraph.CreateAnimation("prefire_exit", false, 1.000000, 1.000000);

	return prefire_exit;
end

function vehicle_enter()
	local AnimationWithGroupName_BADCFCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("vehicle_enter", false, 1.000000, 1.000000);
	return AnimationWithGroupName_BADCFCJIIJHDFGDFGD;
end

function vehicle_idle()
	local AnimationWithGroupName_BADCFCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("vehicle_idle", true, 1.000000, 1.000000);
	return AnimationWithGroupName_BADCFCJIIJHDFGDFGD;
end

function vehicle_board()
	local AnimationWithGroupName_BADCFCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("vehicle_board", false, 1.000000, 1.000000);
	return AnimationWithGroupName_BADCFCJIIJHDFGDFGD;
end

function vehicle_exit()
	local AnimationWithGroupName_BADCFCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("vehicle_exit", false, 1.000000, 1.000000);
	return AnimationWithGroupName_BADCFCJIIJHDFGDFGD;
end

function vehicle_melee()
	local AnimationWithGroupName_BADCFCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("vehicle_melee", false, 1.000000, 1.000000);
	return AnimationWithGroupName_BADCFCJIIJHDFGDFGD;
end

function vehicle_eject()
	local AnimationWithGroupName_BADCFCJIIJHDFGDFGD:table = AnimGraph.CreateAnimation("vehicle_eject", false, 1.000000, 1.000000);
	return AnimationWithGroupName_BADCFCJIIJHDFGDFGD;
end