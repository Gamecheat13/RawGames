-- Copyright (c) Microsoft. All rights reserved.

-- THIS CODE IS GENERATED BY THE VISUAL ANIMATION GRAPH EDITOR -- 

-- GENERATED LUA DECLARATIONS --



-- GENERATED LUA CODE --

function airborne()

	local ReturnPose_CJBCGEJEBIIEBB:table = nil;
	local BlendSpace2DRadial_EIBCIEJEBIIEBEB:table, rifle_airborne = AnimGraph.DuplicateReturnNodeForVisualScripting(AnimGraph.CreateBlendSpace2DRadial(0.000000, 3.000000, 4.000000));
	local animsFor_rifle_airborne = {};
	for key, entry in ipairs(airborne_blendspace()) do
		local animationName = entry.animationName;
		animsFor_rifle_airborne[animationName..entry.playbackRate] = AnimGraph.CreateAnimationWithGroupName(AnimGraph_VisualScripting["combat:rifle_Context"]..animationName, entry.looping, entry.mode, entry.groupName, entry.playbackRate);
		AnimGraph.AddBlendSpaceInputPose2DRadial(rifle_airborne, entry.A, entry.B, animsFor_rifle_airborne[animationName..entry.playbackRate].Out);
		if entry.mode ~= 1 then
			if type(entry.position) == 'number' then
				local position = AnimGraph.HelperInputFloat(entry.position)
				NG.CreateLink(position.Out, animsFor_rifle_airborne[animationName..entry.playbackRate].Position)
			else
				local funct = AnimGraph.HelperInputVariableNode(entry.position)
				NG.CreateLink(funct.Out, animsFor_rifle_airborne[animationName..entry.playbackRate].Position)
			end
		end
	end

	local UnitVelocity_JDJAFFJEBIIEBB:table = AnimGraph.CreateUnitLocalVelocityMagnitudeFunction();
	local UnitMovementAngle_EHGBEFJEBIIEBEB:table = AnimGraph.CreateUnitLocalVelocityAngleRelativeToFacingFunction(.5);

	
	NG.CreateLink(UnitVelocity_JDJAFFJEBIIEBB.Out, BlendSpace2DRadial_EIBCIEJEBIIEBEB.Alpha);
	NG.CreateLink(UnitMovementAngle_EHGBEFJEBIIEBEB.Out, BlendSpace2DRadial_EIBCIEJEBIIEBEB.Beta);
	

	return BlendSpace2DRadial_EIBCIEJEBIIEBEB;
end

function land_soft()

	local ReturnPose_CADGFFJEBIIEBB:table = nil;
	local BlendSpace2DRadial_EHCHGFJEBIIEBEB:table, land_soft = AnimGraph.DuplicateReturnNodeForVisualScripting(AnimGraph.CreateBlendSpace2DRadial(0.000000, 3.000000, 4.000000));
	local animsFor_land_soft = {};
	for key, entry in ipairs(land_soft_blendspace()) do
		local animationName = entry.animationName;
		animsFor_land_soft[animationName..entry.playbackRate] = AnimGraph.CreateAnimationWithGroupName(AnimGraph_VisualScripting["combat:rifle_Context"]..animationName, entry.looping, entry.mode, entry.groupName, entry.playbackRate);
		AnimGraph.AddBlendSpaceInputPose2DRadial(land_soft, entry.A, entry.B, animsFor_land_soft[animationName..entry.playbackRate].Out);
		AnimGraph.ToggleRootMotionOn(animsFor_land_soft[animationName..entry.playbackRate])
		if entry.mode ~= 1 then
			if type(entry.position) == 'number' then
				local position = AnimGraph.HelperInputFloat(entry.position)
				NG.CreateLink(position.Out, animsFor_land_soft[animationName..entry.playbackRate].Position)
			else
				local funct = AnimGraph.HelperInputVariableNode(entry.position)
				NG.CreateLink(funct.Out, animsFor_land_soft[animationName..entry.playbackRate].Position)
			end
		end
	end

	local UnitVelocity_JDJAFFJEBIIEBB:table = AnimGraph.CreateUnitLocalVelocityMagnitudeFunction();
	local UnitMovementAngle_EHGBEFJEBIIEBEB:table = AnimGraph.CreateUnitLocalVelocityAngleRelativeToFacingFunction(.5);

	
	NG.CreateLink(UnitVelocity_JDJAFFJEBIIEBB.Out, BlendSpace2DRadial_EHCHGFJEBIIEBEB.Alpha);
	NG.CreateLink(UnitMovementAngle_EHGBEFJEBIIEBEB.Out, BlendSpace2DRadial_EHCHGFJEBIIEBEB.Beta);
	

	return BlendSpace2DRadial_EHCHGFJEBIIEBEB;
end

 
