
//==========================================================================
//
// Character Animation Script     M U L T I P L A Y E R
//
// All player states should have animations sutable for a two handed rifle type weapon.
//
// This defines the animations and events that might occur at different times
// for this character. State changes, and random behaviour during idle/alert
// states will look here for default behaviour, if that character doesn't have
// something specific in their scripts for that level.
//
//==========================================================================

// playerAnimType:
// Set in "Player Anim Type" in the weapon gdt file.
// Full list specified in playeranimtypes.txt.
// Asset manager choices specified in weapon gdf files.

//==========================================================================
// DEFINES
//
// These can be used to simplify the scripting, by defining replacement strings

DEFINES

// weaponclasses
set weaponclass autofire = mg AND smg

// movetypes
set movetype moving = walk AND walkcr AND run AND runcr AND walkfirstpers AND runfirstpers
set movetype crouching = idlecr AND runcr AND walkcr AND walkcrfirstpers AND runcrfirstpers

//==========================================================================
// ANIMATIONS
//
//	NOTE: scripts are chosen by first-come-first-serve basis. The first match
//	found is the one used.
//
// format:
//
// state <state description>
// {
//		<movement type>
//		{
//			[DEFAULT / <condition type> [<condition value>], ...]
//			{
//				<both/legs/torso/turret> <animation> [sound <filename>]
//				<both/legs/torso/turret> <animation> [sound <filename>]
//				...
//			}
//		}
//	}
//
//	legend:
//
//	<state description>: relaxed, alert, combat
//
//	<movement type>: idle, idlecr,
//                   walk, walkcr.
//                   run, runcr, 
//                   straferight, strafeleft, turnright, turnleft
//
//	<condition type>: playerAnimType, weaponclass, position, enemy_weapon, underwater, mounted, movetype, underhand, leaning, weapon_position
//
//	<condition value>:
//
//		playerAnimType: <weapon Player Anim Type in gdt>
//		position: behind, infront, right, left
//		enemy_weapon: <see weapon pickup names>
//		underwater: <no values>
//		mounted: mg42
//		movetype: <see movement types>
//		underhand: <no values>
//		leaning: right, left
//		weaponclass: unarmed, rifle, sniper, smg, mg, pistol, grenade, rocketlauncher, flamethrower, turret, non-player
//		weapon_position: hip, ads
//		strafing: not, left, right - will never be left or right while moving backwards
//
// NOTES:
// - The player walks when they are ADS, so they can not ADS while running.
//

ANIMATIONS

STATE COMBAT
{
//==========================================================================
//					THIRD PERSON IDLE
//==========================================================================
	idle
	{
		weaponclass unarmed
		{
			torso fp_unarmed_idle
		}

		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}

		weapon_anim $idle
		{
			torso $idle
		}

		default
		{
			legs mp_pl_stand_idle
		}
	}
	idlecr
	{
		weaponclass unarmed
		{
			torso fp_unarmed_idle
		}

		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}

		weapon_anim $idle
		{
			torso $idle
		}

		default
		{
			legs mp_pl_crouch_idle
		}
	}
//==========================================================================
//					FIRST PERSON IDLE
//==========================================================================
	idlefirstpers
	{
		weaponclass unarmed
		{
			torso fp_unarmed_idle
		}		

		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}

		weapon_anim $idle
		{
			torso $idle
		}

		default
		{
			legs pl_stand_idle
		}
	}
	idlecrfirstpers
	{
		weaponclass unarmed
		{
			torso fp_unarmed_idle
		}

		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}

		weapon_anim $idle
		{
			torso $idle
		}

		default
		{
			legs pl_crouch_idle
		}
	}
	
	
// FLINCHING
	flinch_forward
	{
		weaponclass pistol
		{
			
			torso mp_pt_flinch_pistol_forward
		}	
		default 
		{
			torso mp_pt_flinch_forward
		}
	}
	flinch_backward
	{
		weaponclass pistol
		{
			torso mp_pt_flinch_pistol_back
		}	
		default 
		{
			torso mp_pt_flinch_back
		}
	}
	flinch_left
	{
		weaponclass pistol
		{
			
			torso mp_pt_flinch_pistol_left
		}
		default 
		{
			torso mp_pt_flinch_left
		}
	}
	flinch_right
	{
		weaponclass pistol
		{
			torso mp_pt_flinch_pistol_right
		}
		default 
		{
			torso mp_pt_flinch_right
			
		}
	}

// STUMBLE
	stumble_forward
	{
		// pistol
		weaponclass pistol, strafing left
		{
			both pb_stumble_pistol_left
		}
		weaponclass pistol, strafing right
		{
			both pb_stumble_pistol_right
		}
		weaponclass grenade, strafing left
		{
			both pb_stumble_grenade_left
		}
		weaponclass grenade, strafing right
		{
			both pb_stumble_grenade_right
		}
		weaponclass pistol 
		{
			both pb_stumble_pistol_forward
		}
		weaponclass grenade
		{
			both pb_stumble_grenade_forward
		}

		// rifle	
		strafing left
		{
			both pb_stumble_left
		}
		strafing right
		{
			both pb_stumble_right
		}
		default 
		{
			both pb_stumble_forward
		}
	}
	stumble_backward
	{
		default 
		{
			both pb_stumble_back
		}
	}

// STUMBLE WALK
	stumble_walk_forward
	{
		// pistol
		weaponclass pistol AND grenade, strafing left
		{ 
			both pb_stumble_pistol_walk_left
		}
		weaponclass pistol AND grenade, strafing right
		{
			both pb_stumble_pistol_walk_right
		}
		weaponclass pistol AND grenade
		{
			both pb_stumble_pistol_walk_forward
		}

		// rifle	
		strafing left
		{
			both pb_stumble_walk_left
		}
		strafing right
		{
			both pb_stumble_walk_right
		}
		default 
		{
			both pb_stumble_walk_forward
		}
	}
	stumble_walk_backward
	{
		// pistol
		weaponclass pistol AND grenade, strafing left
		{
			both pb_stumble_pistol_walk_left
		}
		weaponclass pistol AND grenade, strafing right
		{
			both pb_stumble_pistol_walk_right
		}	
		weaponclass pistol AND grenade
		{
			both pb_stumble_pistol_walk_back
		}
		// rifle	
		strafing left
		{
			both pb_stumble_walk_left
		}
		strafing right
		{
			both pb_stumble_walk_right
		}		
		default 
		{
			both pb_stumble_walk_back
		}
	}

// STUMBLE CROUCH
	stumble_crouch_forward
	{
		// pistol
		weaponclass pistol AND grenade, strafing left
		{
			both pb_stumble_pistol_left
		}
		weaponclass pistol AND grenade, strafing right
		{ 
			both pb_stumble_pistol_right
		}
		weaponclass pistol AND grenade
		{
			both pb_stumble_pistol_forward
		}

		// rifle	
		strafing left
		{
			both pb_stumble_left
		}
		strafing right
		{
			both pb_stumble_right
		}
		default 
		{
			both pb_stumble_forward
		}
	}
	stumble_crouch_backward
	{
		// pistol
		weaponclass pistol AND grenade, strafing left
		{
			both pb_stumble_pistol_left
		}
		weaponclass pistol AND grenade, strafing right
		{ 
			both pb_stumble_pistol_right
		}	
		weaponclass pistol AND grenade
		{
			both pb_stumble_pistol_back
		}
		strafing left
		{
			both pb_stumble_left
		}
		strafing right
		{
			both pb_stumble_right
		}		
		default 
		{
			both pb_stumble_back
		}
	}
//==========================================================================
//					THIRD PERSON WALK/RUN
//==========================================================================
	walk // Mostly ADS when walking, though there is a brief period of time between idle and run when you walk
	{
		weaponclass unarmed
		{
			torso fp_unarmed_walk
		}		
		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}
		weapon_anim $idle
		{
			torso $idle
		}
		
		//foregrip legs
		strafing right
		{
			legs mp_pb_fg_stand_walk_right 
		}
		strafing fore_right
		{
			legs mp_pb_fg_stand_walk_forward_right 
		}
		strafing fore
		{
			legs mp_pb_fg_stand_walk_forward 
		}
		strafing fore_left
		{
			legs mp_pb_fg_stand_walk_forward_left 
		}
		strafing left
		{
			legs mp_pb_fg_stand_walk_left 
		}
		strafing back_left
		{
			legs mp_pb_fg_stand_walk_back_left 
		}
		strafing back
		{
			legs mp_pb_fg_stand_walk_back 
		}
		strafing back_right
		{
			legs mp_pb_fg_stand_walk_back_right 
		}
		
		default
		{
			torso mp_pb_fg_stand_walk_forward 
		}
		
		default
		{
			legs mp_pb_fg_stand_walk_forward 
		}
	}
	walkcr // Mostly ADS when walking, though there is a brief period of time between idle and run when you walk
	{
		weaponclass unarmed
		{
			torso fp_unarmed_walk
		}		
		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}
		weapon_anim $idle
		{
			torso $idle
		}

		//foregrip legs
		strafing right
		{
			legs mp_pb_p99_crouch_walk_right 
		}
		strafing fore_right
		{
			legs mp_pb_p99_crouch_walk_forward_right 
		}
		strafing fore
		{
			legs mp_pb_p99_crouch_walk_forward 
		}
		strafing fore_left
		{
			legs mp_pb_p99_crouch_walk_forward_left 
		}
		strafing left
		{
			legs mp_pb_p99_crouch_walk_left 
		}
		strafing back_left
		{
			legs mp_pb_p99_crouch_walk_back_left 
		}
		strafing back
		{
			legs mp_pb_p99_crouch_walk_back 
		}
		strafing back_right
		{
			legs mp_pb_p99_crouch_walk_back_right 
		}
		
		default
		{
			torso mp_pb_fg_crouch_walk_forward 
		}
		default
		{
			legs mp_pb_fg_crouch_walk_forward 
		}
	}
	run
	{
		weaponclass unarmed
		{
			torso fp_unarmed_run
		}
		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}
		weapon_anim $idle
		{
			torso $idle
		}

		//foregrip legs
		
		strafing right
		{
			legs mp_pb_fg_stand_run_right 
		}
		strafing fore_right
		{
			legs mp_pb_fg_stand_run_forward_right 
		}
		strafing fore
		{
			legs mp_pb_fg_stand_run_forward 
		}
		strafing fore_left
		{
			legs mp_pb_fg_stand_run_forward_left 
		}
		strafing left
		{
			legs mp_pb_fg_stand_run_left 
		}
		strafing back_left
		{
			legs mp_pb_fg_stand_run_back_left 
		}
		strafing back
		{
			legs mp_pb_fg_stand_run_back 
		}
		strafing back_right
		{
			legs mp_pb_fg_stand_run_back_right 
		}
	
		default
		{
			torso mp_pb_fg_stand_run_forward 
		}
		default
		{
			legs mp_pb_fg_stand_run_forward 
		}
		
	}
	runcr
	{
		weaponclass unarmed
		{
			torso fp_unarmed_walk
		}
		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}
		weapon_anim $idle
		{
			torso $idle
		}
		
		//foregrip legs
		strafing right
		{
			legs mp_pb_fg_crouch_walk_right 
		}
		strafing fore_right
		{
			legs mp_pb_fg_crouch_walk_forward_right 
		}
		strafing fore
		{
			legs mp_pb_fg_crouch_walk_forward 
		}
		strafing fore_left
		{
			legs mp_pb_fg_crouch_walk_forward_left 
		}
		strafing left
		{
			legs mp_pb_fg_crouch_walk_left 
		}
		strafing back_left
		{
			legs mp_pb_fg_crouch_walk_back_left 
		}
		strafing back
		{
			legs mp_pb_fg_crouch_walk_back 
		}		
		strafing back_right
		{
			legs mp_pb_fg_crouch_walk_back_right 
		}

		default
		{
			torso mp_pb_fg_crouch_walk_forward 
		}
		
		default
		{
			legs mp_pb_fg_crouch_walk_forward 
		}
	}
//==========================================================================
//					FIRST PERSON WALK/RUN
//==========================================================================	
	walkfirstpers // Mostly ADS when walking, though there is a brief period of time between idle and run when you walk
	{
		weaponclass unarmed
		{
			torso fp_unarmed_walk
		}	

		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}

		weapon_anim $idle
		{
			torso $idle
		}

		default
		{
			torso pt_pistol_idle
		}


		strafing right
		{
			legs pl_stand_walk_right
		}
		strafing fore_right
		{
			legs pl_stand_walk_fore_right
		}
		strafing fore
		{
			legs pl_stand_walk_fore
		}
		strafing fore_left
		{
			legs pl_stand_walk_fore_left
		}
		strafing left
		{
			legs pl_stand_walk_left
		}
		strafing back_left
		{
			legs pl_stand_walk_back_left
		}
		strafing back
		{
			legs pl_stand_walk_back
		}
		strafing back_right
		{
			legs pl_stand_walk_back_right
		}
		default
		{
			legs pl_stand_walk_fore
		}
	}
	walkcrfirstpers // Mostly ADS when walking, though there is a brief period of time between idle and run when you walk
	{
		weaponclass unarmed
		{
			torso fp_unarmed_walk
		}		

		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}

		weapon_anim $idle
		{
			torso $idle
		}

		default
		{
			torso pt_pistol_idle
		}

		strafing right
		{
			legs pl_crouch_walk_right
		}
		strafing fore_right
		{
			legs pl_crouch_walk_fore_right
		}
		strafing fore
		{
			legs pl_crouch_walk_fore
		}
		strafing fore_left
		{
			legs pl_crouch_walk_fore_left
		}
		strafing left
		{
			legs pl_crouch_walk_left
		}
		strafing back_left
		{
			legs pl_crouch_walk_back_left
		}
		strafing back
		{
			legs pl_crouch_walk_back
		}
		strafing back_right
		{
			legs pl_crouch_walk_back_right
		}
		default
		{
			legs pl_crouch_walk_fore
		}
	}
	runfirstpers
	{
		weaponclass unarmed
		{
			torso fp_unarmed_run
		}

		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}

		weapon_anim $idle
		{
			torso $idle
		}

		default
		{
			torso pt_pistol_idle
		}

		strafing right
		{
			legs pl_stand_run_right
		}
		strafing fore_right
		{
			legs pl_stand_run_fore_right
		}
		strafing fore
		{
			legs pl_stand_run_fore
		}
		strafing fore_left
		{
			legs pl_stand_run_fore_left
		}
		strafing left
		{
			legs pl_stand_run_left
		}
		strafing back_left
		{
			legs pl_stand_run_back_left
		}
		strafing back
		{
			legs pl_stand_run_back
		}
		strafing back_right
		{
			legs pl_stand_run_back_right
		}
		default
		{
			legs pl_stand_run_fore
		}
	}
	runcrfirstpers
	{
		weaponclass unarmed
		{
			torso fp_unarmed_walk
		}

		weapon_anim $empty_idle, weapon_ammo empty
		{
			torso $empty_idle
		}

		weapon_anim $idle
		{
			torso $idle
		}

		default
		{
			torso pt_pistol_idle
		}
		strafing right
		{
			legs pl_crouch_walk_right
		}
		strafing fore_right
		{
			legs pl_crouch_walk_fore_right
		}
		strafing fore
		{
			legs pl_crouch_walk_fore
		}
		strafing fore_left
		{
			legs pl_crouch_walk_fore_left
		}
		strafing left
		{
			legs pl_crouch_walk_left
		}
		strafing back_left
		{
			legs pl_crouch_walk_back_left
		}
		strafing back
		{
			legs pl_crouch_walk_back
		}
		strafing back_right
		{
			legs pl_crouch_walk_back_right
		}
		default
		{
			legs pl_crouch_walk_fore
		}
	}

// STUMBLE SPRINT
	stumble_sprint_forward
	{
		default 
		{
			both pb_stumble_forward
		}
	}
	sprint
	{
		weaponclass rifle
		{
			both pb_sprint_foregrip
		}
		default
		{
			both pb_sprint_pistol
		}
	}
	
	climb_idle
	{
		traversal ladder
		{
			both pb_ladder_climb_up
		}
	}
	
	climb_up
	{
		traversal ladder
		{
			both pb_ladder_climb_up
		}
	}
	climb_down
	{
		traversal ladder
		{
			both pb_ladder_climb_down
		}
	}
	climb_misc
	{
		traversal ladder
		{
			both pb_ladder_climb_down_idle
		}
		traversal mantle_40, context pb_traverse_on_ladder
		{
			both pb_traverse_on_ladder
		}
		traversal mantle_44, context mantle_ledge_right
		{
			both pb_mantle_ledge_right
		}
		traversal mantle_44, context pb_traverse_on_ladder
		{
			both pb_traverse_on_ladder
		}
		traversal mantle_44, modifier cover_left_on
		{
			both pb_mantle_40_cover_left_on
		}
		traversal mantle_44, modifier cover_left_over_long
		{
			both pb_mantle_40_cover_left_over_long
		}
		traversal mantle_44, modifier cover_left_over_short
		{
			both pb_mantle_40_cover_left_over_short
		}
		traversal mantle_44, modifier cover_right_on
		{
			both pb_mantle_40_cover_right_on
		}
		traversal mantle_44, modifier cover_right_over_long
		{
			both pb_mantle_40_cover_right_over_long
		}
		traversal mantle_44, modifier cover_right_over_short
		{
			both pb_mantle_40_cover_right_over_short
		}
		traversal mantle_44, modifier stand_on
		{
			both mp_pb_mantle_on_44
		}
		traversal mantle_44, modifier stand_over_long
		{
			both mp_pb_mantle_over_long_44
		}
		traversal mantle_44, modifier stand_over_short
		{
			both mp_pb_mantle_over_44
		}
		traversal mantle_44
		{
			both pb_mantle_over_44
		}
		traversal mantle_56
		{
			both mp_pb_mantle_on_56
		}
	}
	climb_get_on_top	// get on from top of ladders/pipes, and transition animations
	{
		traversal ladder
		{
			both pb_ladder_get_on_top
		}
	}
	climb_get_off_top
	{
		traversal ladder
		{
			both pb_ladder_get_off_top
		}
	}
	climb_get_on_bottom
	{
		traversal ladder
		{
			both pb_ladder_get_on_bottom
		}
	}
	climb_get_off_bottom
	{
		traversal ladder
		{
			both pb_ladder_get_off_bottom
		}
	}
}

//==========================================================================
// EVENTS
//
// format:
//
// <event description>
// {
//		[DEFAULT / <condition type> [<condition value>], ...]
//		{
//			<both/legs/torso> <animation> [sound <filename>]
//			<both/legs/torso> <animation> [sound <filename>]
//			...
//		}
// }
//
// legend:
//
// <event description>: pain, death, fireweapon, jump, jumpbk, land, dropweapon,
//		raiseweapon, reload, shellshock,
//		door_bash, meleeattack
//
//	NOTE: for gameplay anims (weapons firing, reload, etc) that show no legs movement
//		only the torso should animation from here, leave the legs doing what their
//		locomotive anims want them to do
//

EVENTS

holdfire
{
	
}

fireweapon
{
	weapon_anim $ads_fire, weapon_position ads
	{
		torso $ads_fire
	}

	weapon_anim $fire
	{
		torso $fire
	}
}

stand_to_crouch
{
	weaponclass unarmed
	{
		torso fp_unarmed_idle
	}

	weapon_anim $empty_idle, weapon_ammo empty
	{
		torso $empty_idle
	}

	weapon_anim $idle
	{
		torso $idle
	}
}

crouch_to_stand
{
	weaponclass unarmed
	{
		torso fp_unarmed_idle
	}	

	weapon_anim $empty_idle, weapon_ammo empty
	{
		torso $empty_idle
	}

	weapon_anim $idle
	{
		torso $idle
	}
}

door_bash
{
	default
	{
		both fp_stnd_door_bash
	}
}


meleeattack
{
	weaponclass pistol
		{
		torso mp_pt_melee_03
		}

	default
	{
		torso mp_pt_melee_02
	}
}

dropweapon
{
	default
	{
		torso pt_stand_pullout_pose
	}
}

raiseweapon
{
//
//	weapon_anim $raise
//	{
//		torso $raise
//	}
//
	// (Boon 07-11-2003) Don't want anything here - just blend into the correct pose.
}

silencer_on
{
	weapon_anim $silencer_on
	{
		torso $silencer_on
	}
}

silencer_off
{
	weapon_anim $silencer_off
	{
		torso $silencer_off
	}
}


reload
{
	playerAnimType sw500, ammo_clip 0
	{
		torso sw500_reload_0
	}

	playerAnimType sw500, ammo_clip 1
	{
		torso sw500_reload_4
	}

	playerAnimType sw500, ammo_clip 2
	{
		torso sw500_reload_3
	}

	playerAnimType sw500, ammo_clip 3
	{
		torso sw500_reload_2
	}

	playerAnimType sw500, ammo_clip 4
	{
		torso sw500_reload_1
	}

	weapon_anim $reload_empty, weapon_ammo empty
	{
		torso $reload_empty
	}

	weapon_anim $reload
	{
		torso $reload
	}
}

reload_start
{
	weapon_anim $reload_start
		{
			torso $reload_start
		}
	}

reload_end
{
	weapon_anim $reload_end
		{
			torso $reload_end
		}
	}

//==========================================================================
//					THIRD PERSON Jump
//==========================================================================	

jump
{
	weaponclass pistol
	{
		//both mp_pb_p99_stand_jump_forward
		legs mp_pl_stand_jump
	}
	
	weaponclass rifle
	{
		//both mp_pb_fg_stand_jump_forward
		legs mp_pl_stand_jump
	}
	
	default
	{
		//both mp_pb_fg_stand_jump_forward
		legs mp_pl_stand_jump
	}
}

jumpbk
{
	weaponclass pistol
	{
		//both mp_pb_p99_stand_jump_back
		legs mp_pl_stand_jump
	}
	
	weaponclass rifle
	{
		//both mp_pb_fg_stand_jump_back
		legs mp_pl_stand_jump
	}
	
	default
	{
		//both mp_pb_fg_stand_jump_back
		legs mp_pl_stand_jump
	}
}


land
{
	weaponclass pistol
	{
		//both mp_pb_p99_stand_land duration 10
		legs mp_pl_stand_idle duration 10
	}
	
	weaponclass rifle
	{
		//both mp_pb_fg_stand_land duration 10
		legs mp_pl_stand_idle duration 10
	}
	
	default
	{
		legs mp_pl_stand_idle duration 10
	}
}

shellshock
{
	movetype moving
	{
		torso pb_stand_shellshock duration 5000 blendtime 50
	}
	movetype idle
	{
		torso pb_stand_shellshock duration 5000 blendtime 50
	}
	movetype crouching
	{
		torso pb_crouch_shellshock duration 5000 blendtime 50
	}
}

DEATH
{
	default
	{
		both pb_stand_death_neckdeath
	}
}

pain
{

}

scriptevent
{

}
