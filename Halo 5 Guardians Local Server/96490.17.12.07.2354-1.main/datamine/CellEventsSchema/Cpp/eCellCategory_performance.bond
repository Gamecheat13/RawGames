

/// <auto-generated>
///	 This file was generated by a tool.
///
///	 Tool:	Cell Preprocessor, Version=3.0.0.0
///	 Format:	Concise.  Only contains fields referenced by client code.
///
///	 Changes to this file may cause incorrect behavior and will be lost when the code is regenerated.
/// </auto-generated>
import "bond\core\bond.bond"
import "MaelstromEvent.bond"
import "OsirisIncludes.bond"
import "GameEvents.bond"

namespace cpp i343.Telemetry
namespace csharp Microsoft.Halo.Telemetry.MaelstromEvent.eCellCategory_performance

using CellEventFrequency = Microsoft.Halo.Telemetry.Corinth.Osiris.CellEventFrequency;
using CellMemoryCounter = Microsoft.Halo.Telemetry.Corinth.Osiris.CellMemoryCounter;
using CellMemoryDescriptor = Microsoft.Halo.Telemetry.Corinth.Osiris.CellMemoryDescriptor;
using EventsRange = Microsoft.Halo.Telemetry.Corinth.Osiris.EventsRange;
using PlayerState = Microsoft.Halo.Telemetry.Corinth.Osiris.PlayerState;
using PvEPlayerRoundStats = Microsoft.Halo.Telemetry.Corinth.Osiris.PvEPlayerRoundStats;
using ResourceIdentity = Microsoft.Halo.Telemetry.Corinth.Osiris.ResourceIdentity;
using TeamState = Microsoft.Halo.Telemetry.Corinth.Osiris.TeamState;
using Vector3D = Microsoft.Halo.Telemetry.Corinth.Osiris.Vector3D;
using WorldLocation = Microsoft.Halo.Telemetry.Corinth.Osiris.WorldLocation;


[EventName("CheckpointLoadInitiated")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_saves")]
[SubCategoryVal("3")]
[Description("CheckpointLoad Initiated")]
[FormatString("")]
[Version("1")]
[EventTypeID("0x0105000C")]
struct CheckpointLoadInitiated: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

};

[EventName("CheckpointSaved")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_saves")]
[SubCategoryVal("3")]
[Description("Checkpoint saved")]
[FormatString("")]
[Version("2")]
[EventTypeID("0x0105000A")]
struct CheckpointSaved: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint64 gameTime;
};

[EventName("CheckpointSaveTriggered")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_saves")]
[SubCategoryVal("3")]
[Description("Checkpoint save triggered event")]
[FormatString("")]
[Version("2")]
[EventTypeID("0x01050009")]
struct CheckpointSaveTriggered: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint16 savePriority;
	1: uint64 saveStartTime;
};

[EventName("FrameHitch")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_none")]
[SubCategoryVal("0")]
[Description("Frame hitch detected.")]
[FormatString("")]
[Version("2")]
[EventTypeID("0x0105000B")]
struct FrameHitch: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	1: int32 FrameHitchTimeMs;
};

[EventName("FrameRateUpdate")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_none")]
[SubCategoryVal("0")]
[Description("basic perf metrics")]
[FormatString("")]
[Version("3")]
[EventTypeID("0x01050017")]
struct FrameRateUpdate: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint16 frameCount;
	1: uint16 simFramesWithinBudget;
	2: uint16 renderFramesWithinBudget;
	3: uint16 gpuFramesWithinBudget;
	7: uint16 framesWithGpuThrottling;
	8: uint16 framesWithRenderThrottling;
	10: uint16 totalVBlanks;
	4: float playerX;
	5: float playerY;
	6: float playerZ;
};

[EventName("MainThreadCpu")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_mgsToolbox")]
[SubCategoryVal("1")]
[Description("cpu main thread perf metrics")]
[FormatString("")]
[Version("6")]
[EventTypeID("0x01050001")]
struct MainThreadCpu: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: int32 frame_count;
	1: int32 time;
	4: int32 network_mode;
	5: int32 game_mode;
	7: int32 cinematic;
	8: int32 total_players;
	10: int32 default_lighting;
	11: float position_0_x;
	12: float position_0_y;
	13: float position_0_z;
	14: float orientation_0_x;
	15: float orientation_0_y;
	16: float orientation_0_z;
	23: string bsp;
	24: string zone_set;
	25: wstring base_variant;
	26: string variant;
	27: int32 fps_0_5;
	28: int32 fps_5_10;
	29: int32 fps_10_15;
	30: int32 fps_15_20;
	31: int32 fps_20_25;
	32: int32 fps_25_30;
	33: int32 fps_30_35;
	34: int32 fps_35_40;
	35: int32 fps_40_45;
	36: int32 fps_45_50;
	37: int32 fps_50_55;
	38: int32 fps_55_57;
	39: int32 fps_57_60;
	40: int32 fps_60Plus;
	41: float ms;
	42: float sim_rating;
	43: float sim_total;
	65: int32 sim_0_5;
	66: int32 sim_5_10;
	54: int32 sim_10_15;
	55: int32 sim_15_167;
	56: int32 sim_167_20;
	57: int32 sim_20_25;
	58: int32 sim_25_30;
	59: int32 sim_30Plus;
};

[EventName("MainThreadHitchDetected")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_none")]
[SubCategoryVal("0")]
[Description("Main Thread Hitch Detected")]
[FormatString("")]
[Version("1")]
[EventTypeID("0x0105000D")]
struct MainThreadHitchDetected: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: string CallStack;
	1: int32 TimeSinceLastPoll;
	2: int32 TimeoutThreshold;
};

[EventName("MemCounterInfo")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_memory")]
[SubCategoryVal("2")]
[Description("Memory Counters")]
[FormatString("")]
[Version("2")]
[EventTypeID("0x0105001B")]
struct MemCounterInfo: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: vector<CellMemoryDescriptor> MemoryGroupNames;
	1: vector<CellMemoryDescriptor> MemoryCategoryNames;
	2: vector<CellMemoryDescriptor> MemoryGlobalCounterNames;
};

[EventName("MemCounters")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_memory")]
[SubCategoryVal("2")]
[Description("Memory Counters")]
[FormatString("")]
[Version("2")]
[EventTypeID("0x0105001C")]
struct MemCounters: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	3: string MemoryEventLabel;
	0: vector<CellMemoryCounter> MemoryGroups;
	1: vector<CellMemoryCounter> MemoryCategories;
	2: vector<CellMemoryCounter> MemoryGlobalCounters;
};

[EventName("Memory")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_memory")]
[SubCategoryVal("2")]
[Description("memory performance metrics")]
[FormatString("")]
[Version("5")]
[EventTypeID("0x01050002")]
struct Memory: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: int32 frame_count;
	1: int32 time;
	4: int32 network_mode;
	5: int32 game_mode;
	7: int32 cinematic;
	8: int32 total_players;
	10: int32 default_lighting;
	11: float position_0_x;
	12: float position_0_y;
	13: float position_0_z;
	14: float orientation_0_x;
	15: float orientation_0_y;
	16: float orientation_0_z;
	23: string bsp;
	24: string zone_set;
	25: wstring base_variant;
	26: string variant;
	73: float memory_total_used;
};

[EventName("MemoryCounters")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_memory")]
[SubCategoryVal("2")]
[Description("Memory Counters")]
[FormatString("")]
[Version("1")]
[EventTypeID("0x0105001A")]
struct MemoryCounters: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: string label;
	1: uint64 content;
	2: uint64 system;
	3: uint64 render;
	4: uint64 sandbox;
	5: uint64 ui;
	6: uint64 networking;
	7: uint64 audio;
	8: uint64 effects;
	9: uint64 uncategorized;
	10: uint64 content_peak;
	11: uint64 system_peak;
	12: uint64 render_peak;
	13: uint64 sandbox_peak;
	14: uint64 ui_peak;
	15: uint64 networking_peak;
	16: uint64 audio_peak;
	17: uint64 effects_peak;
	18: uint64 uncategorized_peak;
	19: uint64 e_uncategorizedContainer;
	20: uint64 e_uncategorizedCRT;
	21: uint64 e_uncategorizedMalloc;
	22: uint64 e_uncategorizedRealloc;
	23: uint64 e_uncategorizedHeap;
	24: uint64 e_uncategorizedNonHeap;
	25: uint64 e_uncategorizedSTL;
	26: uint64 e_uncategorizedXMemAlloc;
	27: uint64 e_uncategorizedVirtualAlloc;
	28: uint64 e_errorSystem;
	29: uint64 e_gamestate;
	30: uint64 e_memorySystem;
	31: uint64 e_threadingSystem;
	32: uint64 e_PPLX;
	33: uint64 e_systemDiagnostics;
	34: uint64 e_hashString;
	35: uint64 e_string;
	36: uint64 e_ai;
	37: uint64 e_animation;
	38: uint64 e_asset;
	39: uint64 e_audio;
	40: uint64 e_baselibContainers;
	41: uint64 e_bink;
	42: uint64 e_chores;
	43: uint64 e_effects;
	44: uint64 e_exe;
	45: uint64 e_dll;
	46: uint64 e_fileSystem;
	47: uint64 e_havok;
	48: uint64 e_logging;
	49: uint64 e_networking;
	50: uint64 e_networking_BaseHeap;
	51: uint64 e_networking_NetProtocol;
	52: uint64 e_networking_ServiceLink;
	53: uint64 e_networking_Simulation;
	54: uint64 e_networking_SavedFilm;
	55: uint64 e_networking_AsyncRequests;
	56: uint64 e_lifeCycle;
	57: uint64 e_os;
	58: uint64 e_physics;
	59: uint64 e_render;
	60: uint64 e_runtimeState;
	61: uint64 e_scripting;
	62: uint64 e_tag;
	63: uint64 e_threadLocalStorage;
	64: uint64 e_ui;
	65: uint64 e_work;
	66: uint64 e_gameEngine;
	67: uint64 e_compression;
	68: uint64 e_dataMine;
	69: uint64 e_profiling;
	70: uint64 e_cms;
	71: uint64 e_xblWrapper;
	72: uint64 e_voiceChat;
	73: uint64 e_requisition;
	74: uint64 e_qos;
	75: uint64 e_etagCache;
	76: uint64 e_ugc;
	77: uint64 e_xmem_D3D;
	78: uint64 e_xmem_Audio;
	79: uint64 e_xmem_Video;
	80: uint64 e_xmem_ApplicationClip;
	81: uint64 e_xmem_SmartGlass;
	82: uint64 e_xmem_Networking;
	83: uint64 e_xmem_AppPlatform;
	84: uint64 e_xmem_Input;
	85: uint64 e_xmem_ShellAPI;
	86: uint64 e_xmem_MultimediaControl;
	87: uint64 e_xmem_COM;
	88: uint64 e_xmem_CpuProfilers;
	89: uint64 e_xmem_WinRT;
	90: uint64 e_xmem_RPC;
	91: uint64 e_xmem_D3D_UI;
	92: uint64 e_uncategorizedContainer_peak;
	93: uint64 e_uncategorizedCRT_peak;
	94: uint64 e_uncategorizedMalloc_peak;
	95: uint64 e_uncategorizedRealloc_peak;
	96: uint64 e_uncategorizedHeap_peak;
	97: uint64 e_uncategorizedNonHeap_peak;
	98: uint64 e_uncategorizedSTL_peak;
	99: uint64 e_uncategorizedXMemAlloc_peak;
	100: uint64 e_uncategorizedVirtualAlloc_peak;
	101: uint64 e_errorSystem_peak;
	102: uint64 e_gamestate_peak;
	103: uint64 e_memorySystem_peak;
	104: uint64 e_threadingSystem_peak;
	105: uint64 e_PPLX_peak;
	106: uint64 e_systemDiagnostics_peak;
	107: uint64 e_hashString_peak;
	108: uint64 e_string_peak;
	109: uint64 e_ai_peak;
	110: uint64 e_animation_peak;
	111: uint64 e_asset_peak;
	112: uint64 e_audio_peak;
	113: uint64 e_baselibContainers_peak;
	114: uint64 e_bink_peak;
	115: uint64 e_chores_peak;
	116: uint64 e_effects_peak;
	117: uint64 e_exe_peak;
	118: uint64 e_dll_peak;
	119: uint64 e_fileSystem_peak;
	120: uint64 e_havok_peak;
	121: uint64 e_logging_peak;
	122: uint64 e_networking_peak;
	123: uint64 e_networking_BaseHeap_peak;
	124: uint64 e_networking_NetProtocol_peak;
	125: uint64 e_networking_ServiceLink_peak;
	126: uint64 e_networking_Simulation_peak;
	127: uint64 e_networking_SavedFilm_peak;
	128: uint64 e_networking_AsyncRequests_peak;
	129: uint64 e_lifeCycle_peak;
	130: uint64 e_os_peak;
	131: uint64 e_physics_peak;
	132: uint64 e_render_peak;
	133: uint64 e_runtimeState_peak;
	134: uint64 e_scripting_peak;
	135: uint64 e_tag_peak;
	136: uint64 e_threadLocalStorage_peak;
	137: uint64 e_ui_peak;
	138: uint64 e_work_peak;
	139: uint64 e_gameEngine_peak;
	140: uint64 e_compression_peak;
	141: uint64 e_dataMine_peak;
	142: uint64 e_profiling_peak;
	143: uint64 e_cms_peak;
	144: uint64 e_xblWrapper_peak;
	145: uint64 e_voiceChat_peak;
	146: uint64 e_requisition_peak;
	147: uint64 e_qos_peak;
	148: uint64 e_etagCache_peak;
	149: uint64 e_ugc_peak;
	150: uint64 e_xmem_D3D_peak;
	151: uint64 e_xmem_Audio_peak;
	152: uint64 e_xmem_Video_peak;
	153: uint64 e_xmem_ApplicationClip_peak;
	154: uint64 e_xmem_SmartGlass_peak;
	155: uint64 e_xmem_Networking_peak;
	156: uint64 e_xmem_AppPlatform_peak;
	157: uint64 e_xmem_Input_peak;
	158: uint64 e_xmem_ShellAPI_peak;
	159: uint64 e_xmem_MultimediaControl_peak;
	160: uint64 e_xmem_COM_peak;
	161: uint64 e_xmem_CpuProfilers_peak;
	162: uint64 e_xmem_WinRT_peak;
	163: uint64 e_xmem_RPC_peak;
	164: uint64 e_xmem_D3D_UI_peak;
};

[EventName("PerformanceHighLatency")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_none")]
[SubCategoryVal("0")]
[Description("Sent when latency is in configured conditions")]
[FormatString("")]
[Version("2")]
[EventTypeID("0x01050020")]
struct PerformanceHighLatency: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	14: bond.GUID matchId;
	15: uint64 playerXuid;
	0: vector<uint16> latencyHistogram;
	1: uint32 latencyHistogramStartTime;
	2: float enterCameraPositionX;
	3: float enterCameraPositionY;
	4: float enterCameraPositionZ;
	5: float enterCameraDirectionX;
	6: float enterCameraDirectionY;
	7: float enterCameraDirectionZ;
	8: float exitCameraPositionX;
	9: float exitCameraPositionY;
	10: float exitCameraPositionZ;
	11: float exitCameraDirectionX;
	12: float exitCameraDirectionY;
	13: float exitCameraDirectionZ;
};

[EventName("PerformanceHighLatency_Configuration")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_none")]
[SubCategoryVal("0")]
[Description("configuration of PerformanceHighLatency events")]
[FormatString("")]
[Version("1")]
[EventTypeID("0x0105001F")]
struct PerformanceHighLatency_Configuration: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: float thresholdMS;
	1: uint32 belowThresholdTimeoutMS;
	2: uint32 trackedTimeForSenddMS;
	3: float latencyHistogramFirstBinMS;
	4: float latencyHistogramBinWidthMS;
};

[EventName("RenderCpu")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_mgsToolbox")]
[SubCategoryVal("1")]
[Description("render_cpu perf metrics")]
[FormatString("")]
[Version("4")]
[EventTypeID("0x01050004")]
struct RenderCpu: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: int32 frame_count;
	1: int32 time;
	4: int32 network_mode;
	5: int32 game_mode;
	7: int32 cinematic;
	8: int32 total_players;
	10: int32 default_lighting;
	11: float position_0_x;
	12: float position_0_y;
	13: float position_0_z;
	14: float orientation_0_x;
	15: float orientation_0_y;
	16: float orientation_0_z;
	23: string bsp;
	24: string zone_set;
	25: wstring base_variant;
	26: string variant;
	35: float render_rating;
	36: float render_total;
	37: float render_wait_mirror;
	45: int32 render_cpu_0_5;
	46: int32 render_cpu_5_10;
	39: int32 render_cpu_10_15;
	40: int32 render_cpu_15_167;
	41: int32 render_cpu_167_20;
	42: int32 render_cpu_20_25;
	43: int32 render_cpu_25_30;
	44: int32 render_cpu_30Plus;
};

[EventName("RenderGpu")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_mgsToolbox")]
[SubCategoryVal("1")]
[Description("Render GPU perf metrics")]
[FormatString("")]
[Version("7")]
[EventTypeID("0x01050005")]
struct RenderGpu: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: int32 frame_count;
	1: int32 time;
	4: int32 network_mode;
	5: int32 game_mode;
	7: int32 cinematic;
	8: int32 total_players;
	10: int32 default_lighting;
	11: float position_0_x;
	12: float position_0_y;
	13: float position_0_z;
	14: float orientation_0_x;
	15: float orientation_0_y;
	16: float orientation_0_z;
	23: string bsp;
	24: string zone_set;
	25: wstring base_variant;
	26: string variant;
	35: float gpu_rating;
	43: int32 render_gpu_0_5;
	44: int32 render_gpu_5_10;
	37: int32 render_gpu_10_15;
	38: int32 render_gpu_15_167;
	39: int32 render_gpu_167_20;
	40: int32 render_gpu_20_25;
	41: int32 render_gpu_25_30;
	42: int32 render_gpu_30Plus;
	78: int32 resolution_x;
	79: int32 resolution_y;
};

[EventName("ResourceConstrained")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_none")]
[SubCategoryVal("0")]
[Description("Entering constrained mode.")]
[FormatString("")]
[Version("1")]
[EventTypeID("0x01050011")]
struct ResourceConstrained: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

};

[EventName("ResourceFull")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_none")]
[SubCategoryVal("0")]
[Description("Exiting constrained mode.")]
[FormatString("")]
[Version("1")]
[EventTypeID("0x01050012")]
struct ResourceFull: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

};

[EventName("ServerFrameRateUpdate")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_none")]
[SubCategoryVal("0")]
[Description("basic perf metrics")]
[FormatString("")]
[Version("2")]
[EventTypeID("0x01050018")]
struct ServerFrameRateUpdate: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	0: uint16 frameCount;
	1: uint16 simFramesWithinBudget;
	2: uint16 simFramesLogged;
	3: uint8 simBudgetThreshold;
};

[EventName("ZoneSetTransition")]
[Category("eCellCategory_performance")]
[CategoryVal("5")]
[SubCategory("eCellSubcategoryPerformance_none")]
[SubCategoryVal("0")]
[Description("zone set transition")]
[FormatString("")]
[Version("2")]
[EventTypeID("0x01050016")]
struct ZoneSetTransition: Microsoft.Halo.Telemetry.MaelstromEvent.CellEventBodyBase
{

	1: int32 newZoneSetIndex;
};


