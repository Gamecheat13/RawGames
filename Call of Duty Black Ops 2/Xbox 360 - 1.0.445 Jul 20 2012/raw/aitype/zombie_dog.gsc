// THIS FILE IS AUTOGENERATED, DO NOT MODIFY
/*QUAKED actor_zombie_dog (1.0 0.25 0.0) (-16 -16 0) (16 16 72) SPAWNER MAKEROOM UNDELETABLE ENEMYINFO SCRIPT_FORCESPAWN SM_PRIORITY
defaultmdl="zombie_wolf"
"count" -- max AI to ever spawn from this spawner
SPAWNER -- makes this a spawner instead of a guy
MAKEROOM -- will try to delete an AI if spawning fails from too many AI
UNDELETABLE -- this AI (or AI spawned from here) cannot be deleted to make room for MAKEROOM guys
ENEMYINFO -- this AI when spawned will get a snapshot of perfect info about all enemies
SCRIPT_FORCESPAWN -- this AI will spawned even if players can see him spawning.
SM_PRIORITY -- Make the Spawn Manager spawn from this spawner before other spawners.
*/
#using_animtree("zm_transit_dog");
reference_anims_from_animtree()
{
	dummy_anim_ref = %zombie_dog_idle;
	dummy_anim_ref = %zombie_dog_attackidle_growl;
	dummy_anim_ref = %zombie_dog_attackidle;
	dummy_anim_ref = %zombie_dog_attackidle_bark;
	dummy_anim_ref = %zombie_dog_run_stop;
	dummy_anim_ref = %zombie_dog_run;
	dummy_anim_ref = %zombie_dog_walk;
	dummy_anim_ref = %zombie_dog_run_start;
	dummy_anim_ref = %zombie_dog_turn_90_left;
	dummy_anim_ref = %zombie_dog_turn_90_right;
	dummy_anim_ref = %zombie_dog_turn_180_left;
	dummy_anim_ref = %zombie_dog_turn_180_right;
	dummy_anim_ref = %zombie_dog_run_turn_90_left;
	dummy_anim_ref = %zombie_dog_run_turn_90_right;
	dummy_anim_ref = %zombie_dog_run_turn_180_left;
	dummy_anim_ref = %zombie_dog_run_turn_180_right;
	dummy_anim_ref = %zombie_dog_death_front;
	dummy_anim_ref = %zombie_dog_death_hit_back;
	dummy_anim_ref = %zombie_dog_death_hit_left;
	dummy_anim_ref = %zombie_dog_death_hit_right;
	dummy_anim_ref = %zombie_dog_run_attack;
	dummy_anim_ref = %ai_zombie_dog_attack_v1;
	dummy_anim_ref = %zombie_dog_traverse_down_40;
	dummy_anim_ref = %zombie_dog_traverse_down_96;
	dummy_anim_ref = %zombie_dog_traverse_down_126;
	dummy_anim_ref = %zombie_dog_traverse_down_190;
	dummy_anim_ref = %zombie_dog_traverse_up_40;
	dummy_anim_ref = %zombie_dog_traverse_up_80;
}

main()
{
	self.accuracy = 0.2;
	self.animStateDef = "zm_transit_dog.asd";
	self.animTree = "zm_transit_dog.atr";
	self.csvInclude = "";
	self.demoLockOnHighlightDistance = 100;
	self.demoLockOnViewHeightOffset1 = 8;
	self.demoLockOnViewHeightOffset2 = 8;
	self.demoLockOnViewPitchMax1 = 60;
	self.demoLockOnViewPitchMax2 = 60;
	self.demoLockOnViewPitchMin1 = 0;
	self.demoLockOnViewPitchMin2 = 0;
	self.footstepFXTable = "";
	self.footstepPrepend = "";
	self.footstepScriptCallback = 0;
	self.grenadeAmmo = 0;
	self.grenadeWeapon = "";
	self.health = 200;
	self.precacheScript = "";
	self.secondaryweapon = "";
	self.sidearm = "";
	self.subclass = "regular";
	self.team = "axis";
	self.type = "zombie_dog";
	self.weapon = "";

	self setEngagementMinDist( 256.000000, 0.000000 );
	self setEngagementMaxDist( 768.000000, 1024.000000 );

	randChar = codescripts\character::get_random_character(2);

	switch( randChar )
	{
		case 0:
			character\character_sp_zombie_dog::main();
			break;
		case 1:
			character\character_sp_zombie_dog::main();
			break;
	}
	self SetCharacterIndex( randChar );
}

spawner()
{
	self setspawnerteam("axis");
}

precache(ai_index)
{
	level thread reference_anims_from_animtree();
	PrecacheAnimStateDef( ai_index, #animtree, "zm_transit_dog" );

	character\character_sp_zombie_dog::precache();
	character\character_sp_zombie_dog::precache();

}
